{"version":3,"sources":["components/personal-info/MainInfo.js","components/personal-info/SecondaryInfo.js","components/personal-info/PersonalInfo.js","components/Header.js","contexts/ExperienceContext.js","components/experience/ExperienceList.js","components/experience/ExperienceForm.js","components/experience/ExperienceToggle.js","components/experience/ExperienceCard.js","components/experience/ExperienceSection.js","App.js","reportWebVitals.js","index.js"],"names":["MainInfo","Grid","container","direction","justify","TextField","label","variant","color","size","multiline","rows","margin","required","SecondaryInfo","useStyles","makeStyles","field","padding","spacing","marginBottom","PersonalInfo","classes","Container","item","xs","md","lg","className","Header","Typography","align","ExperienceContext","createContext","ExperienceContextProvider","props","useState","forms","setForm","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","addForm","id","uuid","deleteForm","key","filteredForm","filter","form","saveForm","company","position","description","startDate","endDate","savedForms","forEach","children","paddingLeft","paddingTop","date","ExperienceList","toggleEdit","useContext","alignItems","gutterBottom","IconButton","onClick","marginLeft","marginTop","ExperienceForm","setCompany","setPosition","setDescription","setStartDate","setEndDate","Card","CardContent","onChange","e","target","type","InputLabelProps","shrink","defaultValue","preventDefault","ExperienceToggle","edit","setEdit","ExperienceCard","map","work","marginRight","divider","ExperienceSection","Divider","style","background","fontSize","Button","startIcon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bc036cc.chunk.js","sourcesContent":["import React from \"react\";\n\n// Material-UI import\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@material-ui/core\";\n\nconst MainInfo = () => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        label=\"Full Name\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"medium\"\n        multiline\n        rows={2}\n        margin=\"dense\"\n        required\n      ></TextField>\n      <TextField\n        label=\"Biography\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        multiline\n        rows={5}\n        margin=\"dense\"\n        required\n      ></TextField>\n    </Grid>\n  );\n};\n\nexport default MainInfo;\n","import React from \"react\";\n\n// Material-UI import\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@material-ui/core\";\n\nconst SecondaryInfo = () => {\n  return (\n    <Grid container direction=\"column\">\n      <TextField\n        label=\"Address\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"small\"\n        margin=\"dense\"\n        required\n      ></TextField>\n      <TextField\n        label=\"Phone Number\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"small\"\n        margin=\"dense\"\n        required\n      ></TextField>\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"small\"\n        margin=\"dense\"\n        required\n      ></TextField>\n      <TextField\n        label=\"LinkedIn\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"small\"\n        margin=\"dense\"\n      ></TextField>\n    </Grid>\n  );\n};\n\nexport default SecondaryInfo;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport MainInfo from \"./MainInfo\";\nimport SecondaryInfo from \"./SecondaryInfo\";\n\n// Material-UI import\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  field: {\n    padding: 10,\n  },\n  spacing: {\n    marginBottom: 20,\n  },\n});\n\nconst PersonalInfo = () => {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Grid container direction=\"row\">\n        <Grid item xs={6} md={6} lg={6} className={classes.field}>\n          <MainInfo />\n        </Grid>\n        <Grid item xs={6} md={6} lg={6} className={classes.field}>\n          <SecondaryInfo />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PersonalInfo;\n","import React from \"react\";\n\n// Material-UI import\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Typography variant=\"h4\" align=\"center\">\n        Create Your Personal CV\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport uuid from \"uuid/dist/v1\";\n\nexport const ExperienceContext = createContext();\n\nconst ExperienceContextProvider = (props) => {\n  const [forms, setForm] = useState([]);\n\n  useEffect(() => {\n    setForm(JSON.parse(localStorage.getItem(\"forms\")) || []);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"forms\", JSON.stringify(forms));\n  }, [forms]);\n\n  const addForm = () => {\n    setForm([\n      ...forms,\n      {\n        id: uuid(),\n      },\n    ]);\n  };\n\n  const deleteForm = (key) => {\n    const filteredForm = forms.filter((form) => form.id !== key);\n    setForm(filteredForm);\n  };\n\n  const saveForm = (\n    company,\n    position,\n    description,\n    startDate,\n    endDate,\n    key\n  ) => {\n    const savedForms = forms;\n    savedForms.forEach((form) => {\n      if (form.id === key) {\n        form.company = company;\n        form.position = position;\n        form.description = description;\n        form.startDate = startDate;\n        form.endDate = endDate;\n      }\n    });\n    setForm(savedForms);\n  };\n\n  return (\n    <ExperienceContext.Provider\n      value={{ forms, addForm, deleteForm, saveForm }}\n    >\n      {props.children}\n    </ExperienceContext.Provider>\n  );\n};\n\nexport default ExperienceContextProvider;\n","import React, { useContext } from \"react\";\nimport { ExperienceContext } from \"../../contexts/ExperienceContext\";\n\n// Material-UI import\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport { Grid } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  position: {\n    paddingLeft: 15,\n  },\n  company: {\n    paddingTop: 7,\n  },\n  date: {\n    paddingLeft: 8,\n  },\n});\n\nconst ExperienceList = ({ form, toggleEdit }) => {\n  const classes = useStyles();\n  const { deleteForm } = useContext(ExperienceContext);\n\n  return (\n    <div>\n      <Grid container alignItems=\"center\">\n        <Typography className={classes.company} variant=\"h6\" gutterBottom>\n          {form.company}\n        </Typography>\n        <Typography className={classes.position}>—</Typography>\n        <Typography className={classes.position} variant=\"h6\" color=\"secondary\">\n          {form.position}\n        </Typography>\n      </Grid>\n      <Grid container alignItems=\"center\">\n        <Typography gutterBottom>{form.startDate}</Typography>\n        <Typography className={classes.date}>—</Typography>\n        <Typography className={classes.date} gutterBottom>\n          {form.endDate}\n        </Typography>\n      </Grid>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\">\n        {form.description}\n      </Typography>\n      <Grid container justify=\"flex-end\">\n        <IconButton>\n          <UpdateIcon onClick={() => toggleEdit()} />\n        </IconButton>\n        <IconButton onClick={() => deleteForm(form.id)}>\n          <DeleteOutlined />\n        </IconButton>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ExperienceList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ExperienceContext } from \"../../contexts/ExperienceContext\";\n\n// Material-UI import\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  position: {\n    marginLeft: 15,\n  },\n  company: {\n    marginTop: 15,\n  },\n  date: {\n    marginLeft: 30,\n    marginTop: 15,\n  },\n});\n\nconst ExperienceForm = ({ form, toggleEdit }) => {\n  const classes = useStyles();\n  const { saveForm, deleteForm } = useContext(ExperienceContext);\n  const [company, setCompany] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  useEffect(() => {\n    setCompany(form.company);\n    setPosition(form.position);\n    setDescription(form.description);\n    setStartDate(form.startDate);\n    setEndDate(form.endDate);\n  }, []);\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    saveForm(company, position, description, startDate, endDate, form.id);\n    toggleEdit(form.id);\n  };\n\n  return (\n    <Card variant=\"Media\">\n      <CardContent>\n        <Grid container direction=\"column\">\n          <TextField\n            value={company}\n            onChange={(e) => setCompany(e.target.value)}\n            label=\"Company\"\n            type=\"text\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            required\n            margin=\"dense\"\n          ></TextField>\n          <TextField\n            value={position}\n            onChange={(e) => setPosition(e.target.value)}\n            label=\"Position\"\n            type=\"text\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            required\n            margin=\"dense\"\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            type=\"text\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            margin=\"dense\"\n            multiline\n            rows={3}\n            required\n          ></TextField>\n        </Grid>\n        <TextField\n          className={classes.company}\n          onChange={(e) => setStartDate(e.target.value)}\n          value={startDate}\n          id=\"date\"\n          label=\"Start Date: \"\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          className={classes.date}\n          onChange={(e) => setEndDate(e.target.value)}\n          value={endDate}\n          id=\"date\"\n          label=\"End Date: \"\n          type=\"date\"\n          defaultValue=\"2021-06-29\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <Grid container justify=\"flex-end\">\n          <IconButton>\n            <SaveIcon onClick={handleSave} />\n          </IconButton>\n          <IconButton onClick={() => deleteForm(form.id)}>\n            <DeleteOutlined />\n          </IconButton>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ExperienceForm;\n","import React, { useState } from \"react\";\nimport ExperienceList from \"./ExperienceList\";\nimport ExperienceForm from \"./ExperienceForm\";\n\nconst ExperienceToggle = ({ form }) => {\n  const [edit, setEdit] = useState(true);\n\n  const toggleEdit = () => {\n    return edit ? setEdit(false) : setEdit(true);\n  };\n\n  return edit ? (\n    <ExperienceForm form={form} toggleEdit={toggleEdit} />\n  ) : (\n    <ExperienceList form={form} toggleEdit={toggleEdit} />\n  );\n};\n\nexport default ExperienceToggle;\n","import React, { useContext } from \"react\";\nimport { ExperienceContext } from \"../../contexts/ExperienceContext\";\nimport ExperienceToggle from \"./ExperienceToggle\";\n\n// Material-UI import\n\nconst ExperienceCard = () => {\n  const { forms } = useContext(ExperienceContext);\n\n  return (\n    <div>\n      {forms.map((form) => (\n        <ExperienceToggle form={form} key={form.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default ExperienceCard;\n","import React, { useContext } from \"react\";\nimport ExperienceCard from \"./ExperienceCard\";\nimport { ExperienceContext } from \"../../contexts/ExperienceContext\";\n\n// Material-UI import\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport { Grid } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles({\n  position: {\n    marginTop: 15,\n  },\n  work: {\n    marginRight: 10,\n  },\n  divider: {\n    marginTop: 20,\n  },\n});\n\nconst ExperienceSection = () => {\n  const classes = useStyles();\n  const { addForm } = useContext(ExperienceContext);\n\n  return (\n    <Container>\n      <Divider style={{ background: \"black\" }} variant=\"fullWidth\" />\n      <Grid className={classes.position} container alignItems=\"center\">\n        <WorkIcon fontSize=\"large\" className={classes.work}></WorkIcon>\n        <Typography align=\"left\" variant=\"h4\">\n          Experience\n        </Typography>\n      </Grid>\n      <ExperienceCard />\n      <Button\n        className={classes.position}\n        type=\"submit\"\n        onClick={() => addForm()}\n        color=\"secondary\"\n        variant=\"contained\"\n        startIcon={<AddIcon />}\n      >\n        Add More\n      </Button>\n      <Divider\n        style={{ background: \"black\" }}\n        className={classes.divider}\n        variant=\"fullWidth\"\n      />\n    </Container>\n  );\n};\n\nexport default ExperienceSection;\n","import React from \"react\";\nimport PersonalInfo from \"./components/personal-info/PersonalInfo\";\nimport Header from \"./components/Header\";\nimport ExperienceSection from \"./components/experience/ExperienceSection\";\nimport ExperienceContextProvider from \"./contexts/ExperienceContext\";\n\n// Material-UI import\nimport { Container } from \"@material-ui/core\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Header />\n      <PersonalInfo />\n      <ExperienceContextProvider>\n        <ExperienceSection />\n      </ExperienceContextProvider>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}